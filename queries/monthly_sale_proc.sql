
CREATE OR REPLACE PROCEDURE CALCULATE_MONTHLY_SALE(NO_MONTHS IN NUMBER) IS
    CURRENT_MONTH DATE;
    is_avail NUMBER;
BEGIN
    CURRENT_MONTH := TRUNC(ADD_MONTHS(SYSDATE, -1*NO_MONTHS), 'MM');
    
    DELETE TEMP_MONTHLY_SALE WHERE MONTH_YEAR < CURRENT_MONTH;

    FOR m_count IN 0..NO_MONTHS LOOP
        CURRENT_MONTH := ADD_MONTHS(CURRENT_MONTH, 1);
        -- DBMS_OUTPUT.PUT_LINE(CURRENT_MONTH);
        SELECT COUNT(*) INTO is_avail FROM TEMP_MONTHLY_SALE WHERE MONTH_YEAR = CURRENT_MONTH;
        
        IF is_avail = 0 THEN
            FOR R2 IN (
                SELECT SH.SHOP_ID AS SID, P.PRODUCT_ID AS PID, NVL(SUM(PP.QUANTITY), 0) AS TOTAL_SALE
                FROM
                    SHOPS SH CROSS JOIN PRODUCTS P
                    LEFT JOIN (SELECT * FROM PURCHASE WHERE TO_CHAR(PURCHASE_TIME,'MM-YYYY')=TO_CHAR(CURRENT_MONTH, 'MM-YYYY')) PR
                    ON PR.SHOP_ID = SH.SHOP_ID
                    LEFT JOIN PURCHASED_PRODUCT PP ON (PP.PURCHASE_ID=PR.PURCHASE_ID AND PP.PRODUCT_ID=P.PRODUCT_ID)
                GROUP BY SH.SHOP_ID, P.PRODUCT_ID
            ) LOOP
                INSERT INTO TEMP_MONTHLY_SALE VALUES (CURRENT_MONTH, R2.SID, R2.PID, R2.TOTAL_SALE);
                IF R2.TOTAL_SALE > 0 THEN
                    DBMS_OUTPUT.PUT_LINE(CURRENT_MONTH);
                    DBMS_OUTPUT.PUT_LINE(R2.TOTAL_SALE);
                END IF;
            END LOOP;
        END IF;
    END LOOP;

END;