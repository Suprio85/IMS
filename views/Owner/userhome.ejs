<span style="font-family: verdana, geneva, sans-serif">
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <title></title>
      <!-- <link rel='stylesheet' href='/stylesheets/userstyle.css' /> -->
      <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
        integrity="sha512-0b12LiiKvOWTUO9oGBaXFsrtS0EGGJRqOk9ksO9WZPiFEwy5GehJ3V1zzfejk5K6aaVJT0rrIya1ZxEjHejj9Q=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer"
      />
      <link
        rel="stylesheet"
        href="../stylesheets/shopmanger/productquantity.css"
      />
      <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
      />
      <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
      />
      <link rel="stylesheet" href="../stylesheets/owner/home1.css" />
      <link rel="stylesheet" href="../stylesheets/owner/home2.css" />

      <!-- <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"> -->
    </head>
    <body>
      <header class="header">
        <div class="logo">
          <a href="/">Home</a>
          <a href="/login">Login </a>
          <a href="/products">Products</a>
        </div>

        <div class="header-icons">
          <i class="fas fa-bell"></i>
          <div class="account">
            <img src="./pic/img.jpg" alt="" />
            <h4><%= username %></h4>
            <a style="display: flex" href="/logout">Logout</a>
          </div>
        </div>
      </header>
      <div class="container">
        <nav>
          <div class="side_navbar">
            <span>Main Menu</span>
            <a href="#" class="active">Dashboard</a>
            <a href="/">Profile</a>
            <a href="/owner/addproduct">Add Products</a>
            <a href="/owner/location">Locations</a>
            <a href="/">Request For Product</a>
            <a href="/">Sales</a>
          </div>
        </nav>

        <div class="main-body">
          <h2>Dashboard</h2>
          <form
          method="post"
          action="/owner/search"
          id="searchForm"
          class="search-bar"
          >
          <select id="priceOrder" name="priceOrder">
            <option value="" selected disabled>Select Order</option>
              <option value="1">Price High to Low</option>
              <option value="2">Price Low to High</option>
              <option value="3">Top Sales</option>
          </select>
          <select id = "categoryInput" name="categoryInput">
            <option value="" selected disabled>Select Category</option>
            <% catagories.forEach(catagory => { %>
            <option value="<%= catagory.id %>"><%= catagory.name %></option>
            <% }); %> 
          </select>
          <input
              type="text"
              id="nameInput"
              name="nameInput"
              placeholder="Search by name"
            />
            <input
              type="number"
              id="priceInput"
              name="priceInput"
              placeholder="maximum range of price"
            />
            <input
              type="number"
              id="productidInput"
              name="productidInput"
              placeholder="Search by productId"
            />
            <button type="submit"><i class="fas fa-search"></i> Search</button>
          </form>
          <% products.forEach(product => { %>
          <div class="card-container">
            <div class="card">
              <img src="/images/laptop.png" alt="<%= product.name %> Image" />
              <div class="card-content">
                <h2><%= product.name %></h2>
                <p>product id : <%= product.id %></p>
                <p>price: <%= product.price %></p>
                <button
                  class="btn update-btn"
                  data-action="price"
                  data-productid="<%= product.id %>"
                >
                  PRODUCT ANALYSIS
                </button>
                <button
                  id="regionAnalysisBtn"
                  class="btn analysis-btn"
                  data-action="region-analysis"
                  data-rproductid="<%= product.id %>"
                >
                  PRODUCT ANALYSIS OVER REGION
                </button>
              </div>
            </div>
          </div>
          <% }); %>
          <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
          <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
          <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
        </div>
        <div id="popup" class="popup-container">
          <div class="popup-content">
            <button id="closePopup">&#10006;</button>
            <form id="popupForm">
              <select id="regionId" name="regionId" required autofocus>
                <option value="" disabled selected>Select a Region</option>
                <option value="General">All Region</option>
                <% regions.forEach(region => { %>
                <option value="<%= region.id %>"><%= region.name %></option>
                <% }); %>
              </select>
              <label for="startMonth">Start Month:</label>
              <input type="month" id="startMonth" name="startMonth" required />

              <!-- Add a range input for selecting end month -->
              <label for="endMonth">End Month:</label>
              <input type="month" id="endMonth" name="endMonth" required />
              <button type="button" onclick="submitForm()">Submit</button>
            </form>
            <div id="messageContainer"></div>
            <canvas id="lineChart" width="400" height="200"></canvas>
          </div>
        </div>
        <!-- -------------------------------------------------------------------------------------- -->
        <div id="regionPopup" class="popup-container">
          <div class="popup-content">
            <button id="closeRegionPopup">&#10006;</button>
            <form id="regionPopupForm">
              <label for="startMonthRegionPopup">Start Month:</label>
              <input
                type="month"
                id="startMonthRegionPopup"
                name="startMonthRegionPopup"
                required
              />

              <!-- Add a range input for selecting end month -->
              <label for="endMonthRegionPopup">End Month:</label>
              <input
                type="month"
                id="endMonthRegionPopup"
                name="endMonthRegionPopup"
                required
              />
              <button type="button" onclick="submitRegionForm()">Submit</button>
            </form>
            <div id="regionMessageContainer"></div>
            <canvas id="regionBarChart" width="400" height="200"></canvas>
          </div>
        </div>
      </div>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <script>
        let productId;

        function closeRegionPopup(productId) {
          document.getElementById("regionPopup").style.display = "none";
        }
        document.addEventListener("DOMContentLoaded", function () {
          // Function to open the pop-up
          function openPopup(productId) {
            document.getElementById("popup").style.display = "block";
          }
          let buttons = document.querySelectorAll(".update-btn");
          buttons.forEach(function (button) {
            button.addEventListener("click", function () {
              productId = button.getAttribute("data-productid");
              console.log(productId);

              openPopup(productId);
            });
          });
          document.getElementById("closePopup").addEventListener("click", closePopup);

          // Function to open the pop-up
          function openRegionPopup(productId) {
            document.getElementById("regionPopup").style.display = "block";
            if (window.barChartInstance) window.barChartInstance.destroy();

          }
          let regionButtons = document.querySelectorAll(".analysis-btn");

          regionButtons.forEach(function (button) {
            button.addEventListener("click", function () {
              productId = button.getAttribute("data-rproductid");
              console.log(productId);
              openRegionPopup(productId);
            });
          });

          document
            .getElementById("closeRegionPopup")
            .addEventListener("click", closeRegionPopup);
        });

        function submitForm() {
          const selectedRegionId = document.getElementById("regionId").value;
          console.log("in submit form: ");
          console.log(selectedRegionId);
          console.log(productId);
          const selectedStartMonth =
            document.getElementById("startMonth").value;
          const selectedEndMonth = document.getElementById("endMonth").value;

          const requestData = {
            regionID: selectedRegionId,
            productID: productId,
            startMonth: selectedStartMonth,
            endMonth: selectedEndMonth,
          };

          fetch("/owner", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(requestData),
          })
            .then((response) => response.json())
            .then((data) => {
              // Handle the response data as needed
              console.log("Response from server:", data);

              // Display a message or perform additional actions on the front end
              const messageContainer =
                document.getElementById("messageContainer");
              if (data.success) {
                messageContainer.innerHTML = `<p>${data.message}</p>`;
                // Use dataForLineChart for creating a line chart
                console.log("before chart");
                console.log("Data for line chart:", data.dataForLineChart);
                createLineChart(data.dataForLineChart, data.labelsForLineChart);
              } else {
                messageContainer.innerHTML = `<p>Error: ${data.message}</p>`;
              }
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }

        function submitRegionForm() {
          const selectedStartMonth = document.getElementById(
            "startMonthRegionPopup"
          ).value;
          const selectedEndMonth = document.getElementById(
            "endMonthRegionPopup"
          ).value;

          

          const requestData = {
            productID: productId,
            startMonth: selectedStartMonth,
            endMonth: selectedEndMonth,
          };

          console.log("Request data:", requestData);

          fetch("/owner/region", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(requestData),
          })
            .then((response) => response.json())
            .then((data) => {
              // Handle the response data as needed
              console.log("Response from server:", data);

              // Display a message or perform additional actions on the front end
              const messageContainer = document.getElementById(
                "regionMessageContainer"
              );
              if (data.success) {
                messageContainer.innerHTML = `<p>${data.message}</p>`;
                // Use dataForLineChart for creating a line chart
                console.log("before chart");
                console.log("Data for line chart:", data.dataForLineChart);
                createBarChart(data.dataForLineChart, data.labelsForLineChart);
              } else {
                messageContainer.innerHTML = `<p>Error: ${data.message}</p>`;
              }
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }

        //generating random colors
        function getRandomColor() {
          var letters = "0123456789ABCDEF";
          var color = "#";
          for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
          }
          return color;
        }
        function createBarChart(dataForBarChart, labelsForBarChart) {
          console.log("Data for line chart:", dataForBarChart);

          // Get the canvas and context
          const canvas = document.getElementById("regionBarChart");
          const ctx = canvas.getContext("2d");

          if (window.barChartInstance) {
            window.barChartInstance.destroy();
          }

          // Create a new bar chart instance
          window.barChartInstance = new Chart(ctx, {
            type: "bar",
            data: {
              labels: labelsForBarChart,
              datasets: [
                {
                  label: "Bar Chart",
                  data: dataForBarChart,
                  backgroundColor: getRandomColor(), 
                  borderColor: getRandomColor(),
                  borderWidth: 1,
                },
              ],
            },
            options: {
              scales: {
                y: {
                  beginAtZero: true,
                },
              },
            },
          });
        }

        function createLineChart(dataForLineChart, labelsForLineChart) {
          console.log("Data for line chart:", dataForLineChart);

          // Get the canvas and context
          const canvas = document.getElementById("lineChart");
          const ctx = canvas.getContext("2d");

          // Check if the chart already exists, destroy it if it does
          if (window.lineChartInstance) {
            window.lineChartInstance.destroy();
          }

          // Create a new chart instance
          window.lineChartInstance = new Chart(ctx, {
            type: "line",
            data: {
              labels: labelsForLineChart,
              datasets: [
                {
                  label: "Line Chart",
                  data: dataForLineChart,
                  borderColor: getRandomColor(),
                  borderWidth: 4,
                  fill: false,
                },
              ],
            },
          });
        }

        function closePopup() {
          if (window.lineChartInstance) window.lineChartInstance.destroy();
          document.getElementById("popup").style.display = "none";
          document.getElementById("regionId").value = "";
        }
      </script>
    </body>
  </html>
</span>
